// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------ //
// PT8211 //
// ------ //

#define PT8211_wrap_target 0
#define PT8211_wrap 7
#define PT8211_pio_version 0

static const uint16_t PT8211_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block           side 0
    0xe82f, //  1: set    x, 15           side 1
    0x6001, //  2: out    pins, 1         side 0
    0x0842, //  3: jmp    x--, 2          side 1
    0xf000, //  4: set    pins, 0         side 2
    0xf82f, //  5: set    x, 15           side 3
    0x7001, //  6: out    pins, 1         side 2
    0x1846, //  7: jmp    x--, 6          side 3
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program PT8211_program = {
    .instructions = PT8211_program_instructions,
    .length = 8,
    .origin = -1,
    .pio_version = PT8211_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config PT8211_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + PT8211_wrap_target, offset + PT8211_wrap);
    sm_config_set_sideset(&c, 2, false, false);
    return c;
}


#endif

